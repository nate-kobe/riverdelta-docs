{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Elembo Docs","title":"Accueil"},{"location":"#elembo-docs","text":"","title":"Elembo Docs"},{"location":"architecture/","text":"Architecture Composants d\u00e9ploy\u00e9s [X] API Gateway : interface fournissant une API pour tout le backend [X] Lambda : Backend, tourne sur Python 3.13 [X] DynamoDB : Base de donn\u00e9es NoSQL [X] AWS Amplify : build et sert le frontend de mani\u00e8re statique, \u00e0 partir de Github [X] React : Framework frontend (Javascript) utilis\u00e9 pour le frontend [X] AWS Cognito : authentification et autorisation des utilisateurs [ ] AWS Amplify Datastore pour fonctionnalit\u00e9s hors-ligne [ ] AppSync : permet de d\u00e9verouiller des fonctionnalit\u00e9s hors-ligne mais aussi de cr\u00e9er un niveau d'abstraction du backend pour l'application en utilisant GraphQL [ ] Github Actions : CI/CD pour le d\u00e9ploiement et les tests de l'application Diagramme Frontend L'objectif est de cr\u00e9er une Progressive Web App (PWA), qui permette le portage sur n'importe quelle plateforme fournissant des fonctionnalit\u00e9s proche d'une application native mais \u00e0 partir du navigateur. Cette PWA offre la capacit\u00e9 de fonctionnalit\u00e9 Offline First . Le Frontend tourne sur React, est servit \u00e0 partir d'Amplify. AppSync et Amplify Datastore permettront de couvrir les fonctionnalit\u00e9s hors-ligne. Backend Le backend offre en premier une API qui redirige la majorit\u00e9 des requ\u00eates sur Lambda, une Function-as-a-Service (FaaS). Ainsi, aucun besoin de faire tourner un serveur inutilement, la fonction appel\u00e9e par l'API s'activera uniquement le temps de calculer la r\u00e9ponse, puis redeviendra idle. L'API Gateway est une API REST fonctionnant comme proxy, ce qui nous offre plus de flexibilit\u00e9 en terme de cache et de validation des requ\u00eates.","title":"Architecture"},{"location":"architecture/#architecture","text":"","title":"Architecture"},{"location":"architecture/#composants-deployes","text":"[X] API Gateway : interface fournissant une API pour tout le backend [X] Lambda : Backend, tourne sur Python 3.13 [X] DynamoDB : Base de donn\u00e9es NoSQL [X] AWS Amplify : build et sert le frontend de mani\u00e8re statique, \u00e0 partir de Github [X] React : Framework frontend (Javascript) utilis\u00e9 pour le frontend [X] AWS Cognito : authentification et autorisation des utilisateurs [ ] AWS Amplify Datastore pour fonctionnalit\u00e9s hors-ligne [ ] AppSync : permet de d\u00e9verouiller des fonctionnalit\u00e9s hors-ligne mais aussi de cr\u00e9er un niveau d'abstraction du backend pour l'application en utilisant GraphQL [ ] Github Actions : CI/CD pour le d\u00e9ploiement et les tests de l'application","title":"Composants d\u00e9ploy\u00e9s"},{"location":"architecture/#diagramme","text":"","title":"Diagramme"},{"location":"architecture/#frontend","text":"L'objectif est de cr\u00e9er une Progressive Web App (PWA), qui permette le portage sur n'importe quelle plateforme fournissant des fonctionnalit\u00e9s proche d'une application native mais \u00e0 partir du navigateur. Cette PWA offre la capacit\u00e9 de fonctionnalit\u00e9 Offline First . Le Frontend tourne sur React, est servit \u00e0 partir d'Amplify. AppSync et Amplify Datastore permettront de couvrir les fonctionnalit\u00e9s hors-ligne.","title":"Frontend"},{"location":"architecture/#backend","text":"Le backend offre en premier une API qui redirige la majorit\u00e9 des requ\u00eates sur Lambda, une Function-as-a-Service (FaaS). Ainsi, aucun besoin de faire tourner un serveur inutilement, la fonction appel\u00e9e par l'API s'activera uniquement le temps de calculer la r\u00e9ponse, puis redeviendra idle. L'API Gateway est une API REST fonctionnant comme proxy, ce qui nous offre plus de flexibilit\u00e9 en terme de cache et de validation des requ\u00eates.","title":"Backend"},{"location":"database/","text":"Base de donn\u00e9e Accounts { \"AccountID\": \"SUP123\", \"AccountType\": \"Supplier\", // Supplier ou Customer \"Name\": \"Acme Corp.\", \"ContactInfo\": { \"Email\": \"contact@acmecorp.com\", \"Phone\": \"+123456789\", \"Address\": \"123 Acme St, Springfield\" }, \"AssociatedProducts\": [\"P123\", \"P124\", \"P125\"] \"AccountDetails\": {} }","title":"Base de donn\u00e9es"},{"location":"database/#base-de-donnee","text":"","title":"Base de donn\u00e9e"},{"location":"database/#accounts","text":"{ \"AccountID\": \"SUP123\", \"AccountType\": \"Supplier\", // Supplier ou Customer \"Name\": \"Acme Corp.\", \"ContactInfo\": { \"Email\": \"contact@acmecorp.com\", \"Phone\": \"+123456789\", \"Address\": \"123 Acme St, Springfield\" }, \"AssociatedProducts\": [\"P123\", \"P124\", \"P125\"] \"AccountDetails\": {} }","title":"Accounts"},{"location":"devops/","text":"DevOps Environnement Environnement Description API App dev Environnement uniquement \u00e0 but de d\u00e9veloppement, non stable https://c0zxxa808l.execute-api.eu-west-3.amazonaws.com/dev https://dev.d2m9fd2puxvkv3.amplifyapp.com/ test Sp\u00e9cification pr\u00eate \u00e0 la validation par l'\u00e9quipe d'Elembo prod Environnement de production D\u00e9ploiements Le frontend se d\u00e9ploie automatiquement dans l'environnement relatif \u00e0 la branche du m\u00eame nom. Exemple: un merge sur le branche dev d\u00e9ploiera le frontend automatiquement sur le d\u00e9ploiement dev dans Amplify. Le backend est pour le moment d\u00e9velopp\u00e9 directement via la console web AWS et d\u00e9ploy\u00e9e lors du d\u00e9veloppement. Un CI/CD est n\u00e9cessaire pour passer en test.","title":"DevOps"},{"location":"devops/#devops","text":"","title":"DevOps"},{"location":"devops/#environnement","text":"Environnement Description API App dev Environnement uniquement \u00e0 but de d\u00e9veloppement, non stable https://c0zxxa808l.execute-api.eu-west-3.amazonaws.com/dev https://dev.d2m9fd2puxvkv3.amplifyapp.com/ test Sp\u00e9cification pr\u00eate \u00e0 la validation par l'\u00e9quipe d'Elembo prod Environnement de production","title":"Environnement"},{"location":"devops/#deploiements","text":"Le frontend se d\u00e9ploie automatiquement dans l'environnement relatif \u00e0 la branche du m\u00eame nom. Exemple: un merge sur le branche dev d\u00e9ploiera le frontend automatiquement sur le d\u00e9ploiement dev dans Amplify. Le backend est pour le moment d\u00e9velopp\u00e9 directement via la console web AWS et d\u00e9ploy\u00e9e lors du d\u00e9veloppement. Un CI/CD est n\u00e9cessaire pour passer en test.","title":"D\u00e9ploiements"}]}