{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Elembo Docs","title":"Accueil"},{"location":"#elembo-docs","text":"","title":"Elembo Docs"},{"location":"api/","text":"Documentation de l'API Bienvenue dans l'API Produits ! Cette API permet de g\u00e9rer toutes les requ\u00eates backend. Base URL Les URLs de base de chaque environnement sont document\u00e9 dans DevOps . https://<aws-api-gateway-url>/<stage> Produits Lister les produits R\u00e9cup\u00e8re la liste de tous les produits disponibles. GET /products R\u00e9ponse : [ { \"ProductId\": \"12345\", \"Name\": \"Produit A\", \"Category\": \"Cat\u00e9gorie 1\", \"Description\": \"Description du produit A\" }, { \"ProductId\": \"67890\", \"Name\": \"Produit B\", \"Category\": \"Cat\u00e9gorie 2\", \"Description\": \"Description du produit B\" } ] R\u00e9cup\u00e9rer les d\u00e9tails d'un produit R\u00e9cup\u00e8re les d\u00e9tails d\u2019un produit sp\u00e9cifique. GET /products/{productId} Param\u00e8tre d'URL : - productId (string): ID du produit. R\u00e9ponse : { \"ProductId\": \"12345\", \"Name\": \"Produit A\", \"Category\": \"Cat\u00e9gorie 1\", \"Description\": \"Description du produit A\" } Cr\u00e9er un produit Ajoute un nouveau produit \u00e0 la base de donn\u00e9es. POST /products Corps de la requ\u00eate : { \"Name\": \"Produit C\", \"Category\": \"Cat\u00e9gorie 3\", \"Description\": \"Description du produit C\", } R\u00e9ponse : Code 201 : Produit cr\u00e9\u00e9 avec succ\u00e8s. Code 400 : Erreur dans les donn\u00e9es envoy\u00e9es. Mettre \u00e0 jour un produit PUT /products/{productId} Param\u00e8tres d'URL : productId (string): ID du produit. Corps de la requ\u00eate : { \"Description\": \"Produit C - Mis \u00e0 jour\", } R\u00e9ponse : Code 200 : Produit mis \u00e0 jour. Code 404 : Produit non trouv\u00e9. Supprimer un produit Supprime un produit sp\u00e9cifique. DELETE/products/{productId} Param\u00e8tres d'URL : productId (string): ID du produit. R\u00e9ponse : Code 200 : Produit supprim\u00e9. Code 404 : Produit non trouv\u00e9. Lots Cr\u00e9er un nouveau lot Cr\u00e9er un nouveau lot. Cet API cr\u00e9e une transaction et ajoute un nouveau lot pour le produit d\u00e9sign\u00e9. La transaction est automatiquement li\u00e9e dans le lot. POST /transactions/receive Corps de la requ\u00eate : { \"To\": \"Lieu de r\u00e9ception\", \"TransactionDate\": \"2000-01-23T01:23:45.678+09:00\", } R\u00e9ponse : { \"transactionId\": \"89f8dbea-b327-44a7-8a16-ac7632c1d7de\", \"productLotId\": \"1b974476-3b95-48b4-91ca-1878da48bcdc\" } Lister les lots d'un produit Envoi la liste des lots d'un produit. Pour chaque lot, retourne \u00e9galement les inventaires et les transactions li\u00e9es \u00e0 ce lot. GET /transactions/{productId} Param\u00e8tres d'URL : productId (string): ID du produit. Codes d'erreur communs 400 : Requ\u00eate mal form\u00e9e. 404 : Ressource introuvable. 500 : Erreur interne du serveur. Exemples d'utilisation Lister les produits curl -X GET https://<base-url>/<stage>/products Ajouter un produit curl -X POST https://votre-api-url.com/dev/products \\ -H \"Content-Type: application/json\" \\ -d '{ \"Name\": \"Nouveau Produit\", \"Category\": \"Cat\u00e9gorie\", \"Description\": \"Description du produit\" }'","title":"API"},{"location":"api/#documentation-de-lapi","text":"Bienvenue dans l'API Produits ! Cette API permet de g\u00e9rer toutes les requ\u00eates backend.","title":"Documentation de l'API"},{"location":"api/#base-url","text":"Les URLs de base de chaque environnement sont document\u00e9 dans DevOps . https://<aws-api-gateway-url>/<stage>","title":"Base URL"},{"location":"api/#produits","text":"","title":"Produits"},{"location":"api/#lister-les-produits","text":"R\u00e9cup\u00e8re la liste de tous les produits disponibles. GET /products R\u00e9ponse : [ { \"ProductId\": \"12345\", \"Name\": \"Produit A\", \"Category\": \"Cat\u00e9gorie 1\", \"Description\": \"Description du produit A\" }, { \"ProductId\": \"67890\", \"Name\": \"Produit B\", \"Category\": \"Cat\u00e9gorie 2\", \"Description\": \"Description du produit B\" } ]","title":"Lister les produits"},{"location":"api/#recuperer-les-details-dun-produit","text":"R\u00e9cup\u00e8re les d\u00e9tails d\u2019un produit sp\u00e9cifique. GET /products/{productId} Param\u00e8tre d'URL : - productId (string): ID du produit. R\u00e9ponse : { \"ProductId\": \"12345\", \"Name\": \"Produit A\", \"Category\": \"Cat\u00e9gorie 1\", \"Description\": \"Description du produit A\" }","title":"R\u00e9cup\u00e9rer les d\u00e9tails d'un produit"},{"location":"api/#creer-un-produit","text":"Ajoute un nouveau produit \u00e0 la base de donn\u00e9es. POST /products Corps de la requ\u00eate : { \"Name\": \"Produit C\", \"Category\": \"Cat\u00e9gorie 3\", \"Description\": \"Description du produit C\", } R\u00e9ponse : Code 201 : Produit cr\u00e9\u00e9 avec succ\u00e8s. Code 400 : Erreur dans les donn\u00e9es envoy\u00e9es.","title":"Cr\u00e9er un produit"},{"location":"api/#mettre-a-jour-un-produit","text":"PUT /products/{productId} Param\u00e8tres d'URL : productId (string): ID du produit. Corps de la requ\u00eate : { \"Description\": \"Produit C - Mis \u00e0 jour\", } R\u00e9ponse : Code 200 : Produit mis \u00e0 jour. Code 404 : Produit non trouv\u00e9.","title":"Mettre \u00e0 jour un produit"},{"location":"api/#supprimer-un-produit","text":"Supprime un produit sp\u00e9cifique. DELETE/products/{productId} Param\u00e8tres d'URL : productId (string): ID du produit. R\u00e9ponse : Code 200 : Produit supprim\u00e9. Code 404 : Produit non trouv\u00e9.","title":"Supprimer un produit"},{"location":"api/#lots","text":"","title":"Lots"},{"location":"api/#creer-un-nouveau-lot","text":"Cr\u00e9er un nouveau lot. Cet API cr\u00e9e une transaction et ajoute un nouveau lot pour le produit d\u00e9sign\u00e9. La transaction est automatiquement li\u00e9e dans le lot. POST /transactions/receive Corps de la requ\u00eate : { \"To\": \"Lieu de r\u00e9ception\", \"TransactionDate\": \"2000-01-23T01:23:45.678+09:00\", } R\u00e9ponse : { \"transactionId\": \"89f8dbea-b327-44a7-8a16-ac7632c1d7de\", \"productLotId\": \"1b974476-3b95-48b4-91ca-1878da48bcdc\" }","title":"Cr\u00e9er un nouveau lot"},{"location":"api/#lister-les-lots-dun-produit","text":"Envoi la liste des lots d'un produit. Pour chaque lot, retourne \u00e9galement les inventaires et les transactions li\u00e9es \u00e0 ce lot. GET /transactions/{productId} Param\u00e8tres d'URL : productId (string): ID du produit.","title":"Lister les lots d'un produit"},{"location":"api/#codes-derreur-communs","text":"400 : Requ\u00eate mal form\u00e9e. 404 : Ressource introuvable. 500 : Erreur interne du serveur.","title":"Codes d'erreur communs"},{"location":"api/#exemples-dutilisation","text":"","title":"Exemples d'utilisation"},{"location":"api/#lister-les-produits_1","text":"curl -X GET https://<base-url>/<stage>/products","title":"Lister les produits"},{"location":"api/#ajouter-un-produit","text":"curl -X POST https://votre-api-url.com/dev/products \\ -H \"Content-Type: application/json\" \\ -d '{ \"Name\": \"Nouveau Produit\", \"Category\": \"Cat\u00e9gorie\", \"Description\": \"Description du produit\" }'","title":"Ajouter un produit"},{"location":"architecture/","text":"Architecture Composants d\u00e9ploy\u00e9s API Gateway : interface fournissant une API pour tout le backend Lambda : Backend, tourne sur Python 3.13 DynamoDB : Base de donn\u00e9es NoSQL AWS Amplify : build et sert le frontend de mani\u00e8re statique, \u00e0 partir de Github React : Framework frontend (Javascript) utilis\u00e9 pour le frontend AWS Cognito : authentification et autorisation des utilisateurs AWS S3: stockage de documents AWS Amplify Datastore pour fonctionnalit\u00e9s hors-ligne AppSync : permet de d\u00e9verouiller des fonctionnalit\u00e9s hors-ligne mais aussi de cr\u00e9er un niveau d'abstraction du backend pour l'application en utilisant GraphQL Github Actions : CI/CD pour le d\u00e9ploiement et les tests de l'application Material UI (suggestion) Diagramme Frontend L'objectif est de cr\u00e9er une Progressive Web App (PWA), qui permette le portage sur n'importe quelle plateforme fournissant des fonctionnalit\u00e9s proche d'une application native mais \u00e0 partir du navigateur. Cette PWA offre la capacit\u00e9 de fonctionnalit\u00e9 Offline First . Le Frontend tourne sur React, est servit \u00e0 partir d'Amplify. AppSync et Amplify Datastore permettront de couvrir les fonctionnalit\u00e9s hors-ligne. Backend Le backend offre en premier une API qui redirige la majorit\u00e9 des requ\u00eates sur Lambda, une Function-as-a-Service (FaaS). Ainsi, aucun besoin de faire tourner un serveur inutilement, la fonction appel\u00e9e par l'API s'activera uniquement le temps de calculer la r\u00e9ponse, puis redeviendra idle. L'API Gateway est une API REST fonctionnant comme proxy, ce qui nous offre plus de flexibilit\u00e9 en terme de cache et de validation des requ\u00eates.","title":"Architecture"},{"location":"architecture/#architecture","text":"","title":"Architecture"},{"location":"architecture/#composants-deployes","text":"API Gateway : interface fournissant une API pour tout le backend Lambda : Backend, tourne sur Python 3.13 DynamoDB : Base de donn\u00e9es NoSQL AWS Amplify : build et sert le frontend de mani\u00e8re statique, \u00e0 partir de Github React : Framework frontend (Javascript) utilis\u00e9 pour le frontend AWS Cognito : authentification et autorisation des utilisateurs AWS S3: stockage de documents AWS Amplify Datastore pour fonctionnalit\u00e9s hors-ligne AppSync : permet de d\u00e9verouiller des fonctionnalit\u00e9s hors-ligne mais aussi de cr\u00e9er un niveau d'abstraction du backend pour l'application en utilisant GraphQL Github Actions : CI/CD pour le d\u00e9ploiement et les tests de l'application Material UI (suggestion)","title":"Composants d\u00e9ploy\u00e9s"},{"location":"architecture/#diagramme","text":"","title":"Diagramme"},{"location":"architecture/#frontend","text":"L'objectif est de cr\u00e9er une Progressive Web App (PWA), qui permette le portage sur n'importe quelle plateforme fournissant des fonctionnalit\u00e9s proche d'une application native mais \u00e0 partir du navigateur. Cette PWA offre la capacit\u00e9 de fonctionnalit\u00e9 Offline First . Le Frontend tourne sur React, est servit \u00e0 partir d'Amplify. AppSync et Amplify Datastore permettront de couvrir les fonctionnalit\u00e9s hors-ligne.","title":"Frontend"},{"location":"architecture/#backend","text":"Le backend offre en premier une API qui redirige la majorit\u00e9 des requ\u00eates sur Lambda, une Function-as-a-Service (FaaS). Ainsi, aucun besoin de faire tourner un serveur inutilement, la fonction appel\u00e9e par l'API s'activera uniquement le temps de calculer la r\u00e9ponse, puis redeviendra idle. L'API Gateway est une API REST fonctionnant comme proxy, ce qui nous offre plus de flexibilit\u00e9 en terme de cache et de validation des requ\u00eates.","title":"Backend"},{"location":"database/","text":"Base de donn\u00e9e Products Product Catalog Item Partition Key: productId { \"productId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", \"name\": \"Ananas\", \"description\": \"Mati\u00e8re premi\u00e8re, Ananas\", \"category\": \"Fruit\", \"properties\": {} } Product Lot Primary Key: productLotId, Sort Key: productId { \"productLotId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", \"productId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", // ref to catalog \"type\": \"Raw material\", // or finished product \"name\": \"Ananas\", \"supplierId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", // ref to accounts table \"lotNumber\": \"3728373\", \"unit\": \"pi\u00e8ce\", \"transactionLines\": [{ \"transactionId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", // ref to transaction \"type\": \"in\", // in, out \"from\": \"Location\", \"to\": \"Location\", \"quantity\": 4 }], \"inventory\": [{ \"stockQuantity\": 20, \"location\": \"Goma POS\", }], \"properties\": {} } Transactions { \"transactionId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", \"from\": \"Kinshasa\", \"to\": \"Goma POS\", \"Type\": \"Transport\", // Sale, Purchase \"TransactionDate\": 2024-12-31, \"Properties\": {} } Accounts { \"accountID\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", \"AccountType\": \"Supplier\", // Supplier ou Customer \"Name\": \"Acme Corp.\", \"ContactInfo\": { \"Email\": \"contact@acmecorp.com\", \"Phone\": \"+123456789\", \"Address\": \"123 Acme St, Springfield\", \"AssociatedProducts\": [\"P123\", \"P124\", \"P125\"], \"AccountDetails\": {}, \"Properties\": {} } Other Entities Properties Properties gives metadata information about the entity, it covers most entities in the database. \"Properties\": { \"CreatedBy\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", // ref to user \"CreatedAt\": \"2022-12-27 08:26:49.219717\", \"UpdatedBy\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", // ref to user \"UpdatedAt\": \"2022-12-27 08:26:49.219717\" }","title":"Base de donn\u00e9es"},{"location":"database/#base-de-donnee","text":"","title":"Base de donn\u00e9e"},{"location":"database/#products","text":"","title":"Products"},{"location":"database/#product-catalog-item","text":"Partition Key: productId { \"productId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", \"name\": \"Ananas\", \"description\": \"Mati\u00e8re premi\u00e8re, Ananas\", \"category\": \"Fruit\", \"properties\": {} }","title":"Product Catalog Item"},{"location":"database/#product-lot","text":"Primary Key: productLotId, Sort Key: productId { \"productLotId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", \"productId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", // ref to catalog \"type\": \"Raw material\", // or finished product \"name\": \"Ananas\", \"supplierId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", // ref to accounts table \"lotNumber\": \"3728373\", \"unit\": \"pi\u00e8ce\", \"transactionLines\": [{ \"transactionId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", // ref to transaction \"type\": \"in\", // in, out \"from\": \"Location\", \"to\": \"Location\", \"quantity\": 4 }], \"inventory\": [{ \"stockQuantity\": 20, \"location\": \"Goma POS\", }], \"properties\": {} }","title":"Product Lot"},{"location":"database/#transactions","text":"{ \"transactionId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", \"from\": \"Kinshasa\", \"to\": \"Goma POS\", \"Type\": \"Transport\", // Sale, Purchase \"TransactionDate\": 2024-12-31, \"Properties\": {} }","title":"Transactions"},{"location":"database/#accounts","text":"{ \"accountID\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", \"AccountType\": \"Supplier\", // Supplier ou Customer \"Name\": \"Acme Corp.\", \"ContactInfo\": { \"Email\": \"contact@acmecorp.com\", \"Phone\": \"+123456789\", \"Address\": \"123 Acme St, Springfield\", \"AssociatedProducts\": [\"P123\", \"P124\", \"P125\"], \"AccountDetails\": {}, \"Properties\": {} }","title":"Accounts"},{"location":"database/#other-entities","text":"","title":"Other Entities"},{"location":"database/#properties","text":"Properties gives metadata information about the entity, it covers most entities in the database. \"Properties\": { \"CreatedBy\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", // ref to user \"CreatedAt\": \"2022-12-27 08:26:49.219717\", \"UpdatedBy\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", // ref to user \"UpdatedAt\": \"2022-12-27 08:26:49.219717\" }","title":"Properties"},{"location":"dependencies/","text":"Dependencies Backend Ajv: input validation Frontend eslint: code linting","title":"Dependencies"},{"location":"dependencies/#dependencies","text":"","title":"Dependencies"},{"location":"dependencies/#backend","text":"Ajv: input validation","title":"Backend"},{"location":"dependencies/#frontend","text":"eslint: code linting","title":"Frontend"},{"location":"devops/","text":"DevOps Environnement Environnement Description API App dev Environnement uniquement \u00e0 but de d\u00e9veloppement, non stable https://c0zxxa808l.execute-api.eu-west-3.amazonaws.com/dev https://dev.d2m9fd2puxvkv3.amplifyapp.com/ test Sp\u00e9cification pr\u00eate \u00e0 la validation par l'\u00e9quipe d'Elembo prod Environnement de production D\u00e9ploiements Le frontend se d\u00e9ploie automatiquement dans l'environnement relatif \u00e0 la branche du m\u00eame nom. Exemple: un merge sur le branche dev d\u00e9ploiera le frontend automatiquement sur le d\u00e9ploiement dev dans Amplify. Le backend est pour le moment d\u00e9velopp\u00e9 directement via la console web AWS et d\u00e9ploy\u00e9e lors du d\u00e9veloppement. Un CI/CD est n\u00e9cessaire pour passer en test.","title":"DevOps"},{"location":"devops/#devops","text":"","title":"DevOps"},{"location":"devops/#environnement","text":"Environnement Description API App dev Environnement uniquement \u00e0 but de d\u00e9veloppement, non stable https://c0zxxa808l.execute-api.eu-west-3.amazonaws.com/dev https://dev.d2m9fd2puxvkv3.amplifyapp.com/ test Sp\u00e9cification pr\u00eate \u00e0 la validation par l'\u00e9quipe d'Elembo prod Environnement de production","title":"Environnement"},{"location":"devops/#deploiements","text":"Le frontend se d\u00e9ploie automatiquement dans l'environnement relatif \u00e0 la branche du m\u00eame nom. Exemple: un merge sur le branche dev d\u00e9ploiera le frontend automatiquement sur le d\u00e9ploiement dev dans Amplify. Le backend est pour le moment d\u00e9velopp\u00e9 directement via la console web AWS et d\u00e9ploy\u00e9e lors du d\u00e9veloppement. Un CI/CD est n\u00e9cessaire pour passer en test.","title":"D\u00e9ploiements"}]}